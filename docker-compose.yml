services:
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - hybrid-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MANAGEMENT_HEALTH_DISCOVERY_ENABLED=false
      - MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS=always
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - hybrid-service-network
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_ENABLED=true
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=5000
      - SPRING_CLOUD_CONFIG_RETRY_MAX_INTERVAL=20000
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=1.5
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "9000:9000"
    networks:
      - hybrid-service-network
    depends_on:
      - config-server
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9000
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
  keycloak:
    image: quay.io/keycloak/keycloak:26.3.3
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: senha123
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_STRICT: true
      KC_HTTP_RELATIVE_PATH: /auth
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    command: start-dev
    networks:
      - hybrid-service-network
  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    environment:
      - POSTGRES_DB=keycloak_db
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=senha123
    networks:
      - hybrid-service-network
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

  user-db:
    image: postgres:16
    container_name: user-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME_USER_SERVICE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_USER_SERVICE}
      POSTGRES_DB: user_service_db
    ports:
      - "5432:5432"
    networks:
      - hybrid-service-network
    volumes:
      - pg-data-user-service:/var/lib/postgresql/data
  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME_USER_SERVICE}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD_USER_SERVICE}
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
    networks:
      - hybrid-service-network
    depends_on:
      - user-db
      - config-server
      - discovery-server

  taxi-db:
    image: postgres:16
    container_name: taxi-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME_TAXI_SERVICE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_TAXI_SERVICE}
      POSTGRES_DB: taxi_service_db
    ports:
      - "5433:5432"
    networks:
      - hybrid-service-network
    volumes:
      - pg-data-taxi-service:/var/lib/postgresql/data
  taxi-service:
    build: ./taxi-service
    container_name: taxi-service
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME_TAXI_SERVICE}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD_TAXI_SERVICE}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=20
    networks:
      - hybrid-service-network
    depends_on:
      - taxi-db
      - config-server
      - discovery-server

  redis:
    image: redis:8.2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis-data:/data
    networks:
      - hybrid-service-network

volumes:
  pg-data-user-service:
  pg-data-taxi-service:
  keycloak-db-data:
  redis-data:
  keycloak-data:
networks:
  hybrid-service-network:
    driver: bridge


